version: '3.8'

services:
  # PostgreSQL Database for Development
  postgres:
    image: postgres:15-alpine
    container_name: yakka_postgres_dev
    environment:
      POSTGRES_DB: yakka_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./migrations/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yakka_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - yakka_network

  # PostgreSQL Database for Production (separate instance)
  postgres-prod:
    image: postgres:15-alpine
    container_name: yakka_postgres_prod
    environment:
      POSTGRES_DB: yakka_prod
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yakka_prod"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - yakka_network
    profiles:
      - production

  # Application (Development)
  app:
    build: .
    container_name: yakka_app_dev
    ports:
      - "8080:8080"
    environment:
      ENVIRONMENT: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: yakka_dev
      DB_SSLMODE: disable
      PORT: 8080
      LOG_LEVEL: debug
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - yakka_network
    profiles:
      - development

  # Application (Production)
  app-prod:
    build: .
    container_name: yakka_app_prod
    ports:
      - "8081:8080"
    environment:
      ENVIRONMENT: production
      DB_HOST: postgres-prod
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: yakka_prod
      DB_SSLMODE: require
      PORT: 8080
      LOG_LEVEL: info
    depends_on:
      postgres-prod:
        condition: service_healthy
    networks:
      - yakka_network
    profiles:
      - production

volumes:
  postgres_dev_data:
  postgres_prod_data:

networks:
  yakka_network:
    driver: bridge
